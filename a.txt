5
public class MainActivity extends AppCompatActivity implements
View.OnClickListener {
TextView lblCounter;
Button btnStart,btnStop;
int counter=0;
boolean running=false;
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
lblCounter=(TextView)findViewById(R.id.lbl_text);
btnStart=(Button)findViewById(R.id.btn_start);
btnStop=(Button)findViewById(R.id.btn_stop);
btnStop.setOnClickListener(this);
btnStart.setOnClickListener(this);
}
public void onClick(View v){
if(v.equals(btnStart)){
counter=0;
running=true;
new MyCounter().start();
}
else if(v.equals(btnStop)){
running=false;
}}
Handler handler=new Handler()
{
public void handleMessage(Message m)
{
lblCounter.setText(String.valueOf(m.what));
}};
class MyCounter extends Thread
{
public void run()
{
while(running)
{
counter++;
handler.sendEmptyMessage(counter);
try {
Thread.sleep(1000);
}
catch(Exception e)
{}
}}}}

6
public class MainActivity extends AppCompatActivity implements
View.OnClickListener {
Button btnParseXml,btnParseJson;
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
btnParseXml=(Button)findViewById(R.id.btn_parsexml);
btnParseJson=(Button)findViewById(R.id.btn_parsejson);
btnParseJson.setOnClickListener(this);
btnParseXml.setOnClickListener(this);
}
@Override
public void onClick(View v) {
if(v.equals(btnParseJson)){
Intent it=new Intent(this,ViewActivity2.class);
it.putExtra("mode",1);
startActivity(it);
}
else if(v.equals(btnParseXml)){
Intent it=new Intent(this,ViewActivity2.class);
it.putExtra("mode",2);
startActivity(it);
}}}

public class ViewActivity2 extends AppCompatActivity {
TextView lblXmlData, lblJsonData;
int mode=0;
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_view2);
lblXmlData=(TextView)findViewById(R.id.lbl_xml_data);
lblJsonData=(TextView)findViewById(R.id.lbl_json_data);
mode=getIntent().getIntExtra("mode",0);
if(mode==1){
parseJson();
}
else{
parseXmlDocument();
}}
public String parseXmlDocument(){
try {
InputStream is = getAssets().open("input.xml");
DocumentBuilderFactory dbFactory =
DocumentBuilderFactory.newInstance();
DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
Document doc = dBuilder.parse(is);
Element element=doc.getDocumentElement();
element.normalize();
NodeList nList = doc.getElementsByTagName("employee");
for (int i=0; i<nList.getLength(); i++) {
Node node = nList.item(i);
if (node.getNodeType() == Node.ELEMENT_NODE) {
Element element2 = (Element) node;
lblXmlData.setText("City Name : " + getValue("city_name",
element2)+"\n");
lblXmlData.append("Latitude : " + getValue("Latitude",
element2)+"\n");
lblXmlData.append("Longitude : " + getValue("Longitude",
element2)+"\n");
lblXmlData.append("Temperature : " + getValue("Temperature",
element2)+"\n");
lblXmlData.append("Humidity : " + getValue("Humidity",
element2)+"\n");
}}} catch (Exception e) {e.printStackTrace();}
return null;
}
private static String getValue(String tag, Element element) {
NodeList nodeList =
element.getElementsByTagName(tag).item(0).getChildNodes();
Node node = nodeList.item(0);
return node.getNodeValue();
}
public void parseJson(){
try {
InputStream inputStream=getAssets().open("input.json");
byte[] data=new byte[inputStream.available()];
inputStream.read(data);
String readData=new String(data);
JSONObject jsonObject=new JSONObject(readData);
JSONObject jsonObject1=jsonObject.getJSONObject("employee");
lblJsonData.setText("City
Name:"+jsonObject1.getString("city_name")+"\n");
lblJsonData.append("Latitude:"+jsonObject1.getString("Latitude")+"\n");
lblJsonData.append("Longitude"+jsonObject1.getString("Longitude")+"\n");
lblJsonData.append("Temperature:"+jsonObject1.getInt("Temperature")+"\
n");
lblJsonData.append("Humidity"+jsonObject1.getString("Humidity")+"\n");
} catch (Exception e) {
e.printStackTrace();
}}}

7
public class MainActivity extends AppCompatActivity implements
View.OnClickListener {
EditText txtSpeak;
Button btnSpeak;
TextToSpeech textToSpeech;
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
txtSpeak=(EditText)findViewById(R.id.editText);
btnSpeak=(Button)findViewById(R.id.btn_speak);
btnSpeak.setOnClickListener(this);
textToSpeech=new TextToSpeech(getBaseContext(),
new TextToSpeech.OnInitListener() {
@Override
public void onInit(int status) {
if(status!=TextToSpeech.ERROR){
Toast.makeText(getBaseContext(),
"Success",
Toast.LENGTH_LONG).show();
}}});}
public void onClick(View v){
String text=txtSpeak.getText().toString();
textToSpeech.speak(text,
TextToSpeech.QUEUE_FLUSH,null);
}}

8
public class MainActivity extends AppCompatActivity implements
View.OnClickListener{
Button btnOne,btnTwo,btnThree,btnFour,btnFive;
Button btnSix,btnSeven,btnEight,btnNine,btnZero;
Button btnDel,btnStar,btnHash,btnCall,btnSave;
EditText txtPhonenumber;
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
btnOne=(Button)findViewById(R.id.btn_one);
btnOne.setOnClickListener(this);
btnTwo=(Button)findViewById(R.id.btn_two);
btnTwo.setOnClickListener(this);
btnThree=(Button)findViewById(R.id.btn_three);
btnThree.setOnClickListener(this);
btnFour=(Button)findViewById(R.id.btn_four);
btnFour.setOnClickListener(this);
btnFive=(Button)findViewById(R.id.btn_five);
btnFive.setOnClickListener(this);
btnSix=(Button)findViewById(R.id.btn_six);
btnSix.setOnClickListener(this);
btnSeven=(Button)findViewById(R.id.btn_seven);
btnSeven.setOnClickListener(this);
btnEight=(Button)findViewById(R.id.btn_eight);
btnEight.setOnClickListener(this);
btnNine=(Button)findViewById(R.id.btn_nine);
btnNine.setOnClickListener(this);
btnZero=(Button)findViewById(R.id.btn_zero);
btnZero.setOnClickListener(this);
btnStar=(Button)findViewById(R.id.btn_star);
btnStar.setOnClickListener(this);
btnHash=(Button)findViewById(R.id.btn_hash);
btnHash.setOnClickListener(this);
btnCall=(Button)findViewById(R.id.btn_call);
btnCall.setOnClickListener(this);
btnSave=(Button)findViewById(R.id.btn_save);
btnSave.setOnClickListener(this);
btnDel=(Button)findViewById(R.id.btn_delete);
btnDel.setOnClickListener(this);
txtPhonenumber=(EditText)findViewById(R.id.txt_phonenumber);
txtPhonenumber.setText("");
}
@Override
public void onClick(View v) {
if(v.equals(btnOne))
{
txtPhonenumber.append("1");
}
else if(v.equals(btnTwo))
{
txtPhonenumber.append("2");
}
else if(v.equals(btnThree))
{
txtPhonenumber.append("3");
}
else if(v.equals(btnFour))
{
txtPhonenumber.append("4");
}
else if(v.equals(btnFive))
{
txtPhonenumber.append("5");
}
else if(v.equals(btnSix))
{
txtPhonenumber.append("6");
}
else if(v.equals(btnSeven))
{
txtPhonenumber.append("7");
}
else if(v.equals(btnEight))
{
txtPhonenumber.append("8");
}
else if(v.equals(btnNine))
{
txtPhonenumber.append("9");
}
else if(v.equals(btnZero))
{
txtPhonenumber.append("0");
}
else if(v.equals(btnStar))
{
txtPhonenumber.append("*");
}
else if(v.equals(btnHash))
{
txtPhonenumber.append("#");
}
else if(v.equals(btnSave))
{
Intent contactIntent = new Intent
(ContactsContract.Intents.Insert.ACTION);
contactIntent.setType
(ContactsContract.RawContacts.CONTENT_TYPE);
contactIntent
.putExtra(ContactsContract.Intents.Insert.NAME,
"Unknown");
contactIntent.putExtra(ContactsContract.Intents.Insert.PHONE,
txtPhonenumber.getText().toString());
startActivity(contactIntent);
}
else if(v.equals(btnCall))
{
String data=txtPhonenumber.getText().toString();
Intent it=new Intent(Intent.ACTION_CALL);
it.setData(Uri.parse("tel:"+data));
startActivity(it);
}
else if(v.equals(btnDel))
{
String data=txtPhonenumber.getText().toString();
if(data.length()>0)
{
txtPhonenumber.setText
(data.substring(0,data.length()-1));
}
else
{
txtPhonenumber.setText("");}
}
}
}
